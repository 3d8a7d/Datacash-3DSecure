using System;

namespace DataCash3DSecure
{
    public partial class ThreeDS : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
        }

        private void show3DSIframe()
        {
            //this is the data cash reference number for this transaction
            var datacash_ref = ""; // FROM SESSION???

            //this is our order id
            var ourReference = ""; // FROM SESSION???

            //this is the url of the ACS - the page generated by the bank, that contains the 
            //boxes where the customer enters information etc...
            var acsUrl =""; // FROM SESSION???

            //this is a long message / code that is generated for the transaction
            var pareq = ""; // FROM SESSION???

            //please see http://bit.ly/1dRovt if you are unsure on the ? and : usage here....
            var termUrlPrefix = Request.ServerVariables["HTTPS"] == "ON" ? "https://" : "http://";

            //termUrl is where the ACS page posts back to.
            var termUrl = string.Format("{0}{1}",
                termUrlPrefix,
                Request.Url.Authority + "/3DSResponse.aspx");

            //ClientScript.RegisterHiddenField adds a hidden field to the form...
            ClientScript.RegisterHiddenField("PaReq", pareq);
            ClientScript.RegisterHiddenField("TermUrl", termUrl);

            //this is the data cash reference, and our reference - 
            //so we can update the order on the other side of the verification (paid, failed etc...)
            ClientScript.RegisterHiddenField("MD", datacash_ref + "|" + ourReference);

            var js = string.Format("javascript: document.{0}.action='{1}'; document.{2}.target=\"{3}\"; document.{4}.submit();",
                MainForm.ID,
                acsUrl,
                MainForm.ID,
                "ACSFrame",
                MainForm.ID
            );

            //since the body tag of this page is called myBody, and is runat=server, we can access
            //it here, and inject our javascript.
            myBody.Attributes.Add("onLoad", js);
        }
    }
}